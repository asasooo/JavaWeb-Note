程序自身可以是一个线程类


synchronized
synchronized
synchronized
synchronized
synchronized
synchronized
synchronized
synchronized


上锁后 方法也可以调用 上锁要考虑所有相互冲突的。要上锁就都上锁
	此为 同步！
	上了锁的方法  可以由其他方法 访问！
	当上锁 后 其他线程不可以访问  但是 不保证其他线程能不能进入其他

一般 改动 的方法 需要上锁  
一般 读取 的方法 不需要上锁


synchronized（this) 锁定当前对象 sleep也不会出错误！！
	简便的啊方法 
	public synchronized void Name(){
		直接在名称处声明


多线程 死锁 问题：
	产生死锁现象：
		当线程执行之中 锁定对象 锁住后另一个线程 也需要锁住
		另一个线程也需要锁定两个对象
		一个线被其他线程锁住了
		相互锁住
	形成一个死循环
   解决方法 ：	锁定 一个 整个对象 不要锁小对象
	死锁现象很少见 例如实现数据库

加入锁定了 一个大方法 但是没有锁定 大方法中的小方法  小方法是 可以被调用的 
