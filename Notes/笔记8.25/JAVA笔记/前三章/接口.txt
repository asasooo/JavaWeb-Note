Java是单继承 但实际上存在多继承。
java只支持单继承，若想实现多继承 要用接口
接口interface是一种 特殊的 抽象类 
用interface替换掉原有的class。
interface 中的对象为 public static final + 对象。
 
为什么定义成public static final：
	若有多个继承后会有多个相同的成员变量或对象有可能会出错。
	若有static关键字 则说明对象不属于专门的对象。

多个无关的类 可以实现多个接口 多个接口名直接要用 ， 隔开。

如：public interface Lei{
			
		}
接口 中只有常量和方法定义 没有变量和方法实现。

在接口中定义的方法 不用写abstract 应为所有的方法都默认为abstract。

一个类可以实现多个接口。
接口中的属性必须是 public static final。
接口中的方法只能是 public  切为抽象方法 不用写abstract。

在需要接口的 类  要写 implements + 接口名。并需要重写接口中的抽象方法。

实现了接口的 对象 可以 被传入接口 类型的 参数。
接口与他的实现类之间存在多态关系。

接口也可以集成 interface extends Fu{}
接口和接口之间也可以相互继承。

java 中的instanceof 运算符是用来在运行时指出对象是否是特定类的一个实例

I i = new I();
IO io = new IO():


接口中方法都为抽象方法。
下面给你说一下抽象类和接口的区别：抽象类由abstract关键字来修饰，接口由interface关键字来修饰。抽象类中除了有抽象方法外，也可以有数据成员和非抽象方法；而接口中所有的方法必须都是抽象的，接口中也可以定义数据成员，但必须是常量。