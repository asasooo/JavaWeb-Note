	没有insertAfter方法 
	*** removeChild 删除节点，用通过父节点进行删除，removeChild要在父节点上进行使用
	eg{
		<script type="text/javascript"/>
		function remove(){ /*1，获取li标签 2，获取父节点标签 3，执行删除
			var li2 = document.getElementById("");
			var ul2 = li2.parentNode 或 var li2 = document.getElementById();
			ul2.removeChild("li2");
	*** replaceChild（newNode,oldNode）替换方法 
	   不能替换自己 ， 要通过父节点
		第一个参数 ――新节点
		第二个参数――旧节点
	eg{
		1，获取li
		2，创建新标签
		3，创建文本
		4，把文本添加到li下
		5，进行替换
		<script type="text/javascript"/>
		function replace(){
		var liOld = document.getElementById();
		var liNew = document.createElement("li");
		var text = document.createTextNode("lxa");
		liNew.appendChild(text);
		var parentUl = document.getElementById("ul") 或 liOld.parentNode;
		parentUl.replaceChild(liNew,liOld);
	}	
	
	*** cloneNode（boolean） 复制节点，里面参数 boolean类型 表示是否复制节点
	eg{
		1,获取ul
		2，执行复制cloneNode true
		3，把复制的内容放到div里
			获取div
			appendChild方法
		var ul = document.getElementById（）;
		var ulcopy = ul.cloneNode(true);
		var div111 = document.getElementById();
		div111.appendChild(ulcopy);
	}
	
	*** insertBefore : 在某个节点之前插入
	    appendChild ： 在末尾添加，剪切
	    removeChild ： 通过父节点删除
	    replaceChild ： 替换通过父节点
	    cloneNode ： 复制节点

	innerHTML属性：
		不是DOM组成部分，大部分浏览器都支持
	  1，获取文本内容
	  2，向标签里面设置内容
	 	<script type="text/javascript"/>
		var span1 = document.getElementById();
		span1.innerHTML; ―― 获取标签里的文本内容

		div22 空的div
		div22.innerHTML = "<h>lxalxa</h>"; ―― 直接写代码
		/* 添加表格
		var tab = "<table><tr><td>asd</td></tr></table>";
		div22.innerHTML = tab ;
	动态显示时间：设置计时器 用innerHTML写入时间
		function time(){
		var date = new Date();
		var d = date.toLocalString();
		var div1 = document.getElementById();
		div1.innerHTML = d ;
		}
		setInterval("time();",1000)
	
	&&& 总结： 
		getAttribute
		setAttribute

		获取子标签 唯一 方法 getElementByTagName
		nodeType
		nodeName
		nodeValue
		appendChild 可以添加到末尾 有剪切黏贴的效果
		insertBefore（新节点，旧节点） 执行添加通过父节点进行
		removeChild 通过父节点
		replaceChild（新节点，旧节点）
		cloneNode（true）boolean表示复制子节点
		innerHTML*** 
			可以获取文本内容，可以向标签里设置内容可以设置html代码
		
		